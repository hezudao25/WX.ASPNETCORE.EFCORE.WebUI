// <auto-generated />
using System;
using Asp.NetCore.EFCore.Models.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace WX.AspNetCore.EFCore.Models.Migrations.Migrations
{
    [DbContext(typeof(EFCoreMigrationContext))]
    [Migration("20200408081323_initial001")]
    partial class initial001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Zhaoxi")
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Asp.NetCore.EFCore.Models.Migrations.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastModifierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnName("CompanyName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ConmpanyInfo","Zhaoxi");
                });

            modelBuilder.Entity("Asp.NetCore.EFCore.Models.Migrations.Models.SysLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("Introduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("LastModifierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<byte>("LogType")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.ToTable("SysLog");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(2020, 4, 8, 16, 13, 23, 93, DateTimeKind.Local).AddTicks(4522),
                            CreatorId = 1,
                            Introduction = "Introduction1",
                            LastModifyTime = new DateTime(2020, 4, 8, 16, 13, 23, 95, DateTimeKind.Local).AddTicks(8430),
                            LogType = (byte)0,
                            UserName = "测试1"
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(2020, 4, 8, 16, 13, 23, 95, DateTimeKind.Local).AddTicks(9831),
                            CreatorId = 1,
                            Introduction = "Introduction2",
                            LastModifyTime = new DateTime(2020, 4, 8, 16, 13, 23, 95, DateTimeKind.Local).AddTicks(9867),
                            LogType = (byte)0,
                            UserName = "测试2"
                        },
                        new
                        {
                            Id = 3,
                            CreateTime = new DateTime(2020, 4, 8, 16, 13, 23, 95, DateTimeKind.Local).AddTicks(9879),
                            CreatorId = 1,
                            Introduction = "Introduction3",
                            LastModifyTime = new DateTime(2020, 4, 8, 16, 13, 23, 95, DateTimeKind.Local).AddTicks(9881),
                            LogType = (byte)0,
                            UserName = "测试3"
                        });
                });

            modelBuilder.Entity("Asp.NetCore.EFCore.Models.Migrations.Models.SysMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("LastModifierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuIcon")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte>("MenuLevel")
                        .HasColumnType("tinyint");

                    b.Property<byte>("MenuType")
                        .HasColumnType("tinyint");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("SourcePath")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnName("SysMenuName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("SysMenu");
                });

            modelBuilder.Entity("Asp.NetCore.EFCore.Models.Migrations.Models.SysRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("LastModifierId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SysRole");
                });

            modelBuilder.Entity("Asp.NetCore.EFCore.Models.Migrations.Models.SysUserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long?>("QQ")
                        .HasColumnType("bigint");

                    b.Property<byte?>("Sex")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("WeChat")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Name", "Phone");

                    b.ToTable("SysUserInfo");
                });

            modelBuilder.Entity("Asp.NetCore.EFCore.Models.Migrations.Models.SysUserInfoDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SysUserInfoDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("SysUserInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SysUserInfoDetailId")
                        .IsUnique();

                    b.HasIndex("SysUserInfoId");

                    b.ToTable("SysUserInfoDetail");
                });

            modelBuilder.Entity("Asp.NetCore.EFCore.Models.Migrations.Models.SysUserRoleMapping", b =>
                {
                    b.Property<int>("SysUserId")
                        .HasColumnType("int");

                    b.Property<int>("SysRoleId")
                        .HasColumnType("int");

                    b.HasKey("SysUserId", "SysRoleId");

                    b.HasIndex("SysRoleId");

                    b.ToTable("SysUserRoleMapping");
                });

            modelBuilder.Entity("Asp.NetCore.EFCore.Models.Migrations.Models.SysUserInfo", b =>
                {
                    b.HasOne("Asp.NetCore.EFCore.Models.Migrations.Models.Company", "Company")
                        .WithMany("SysUsers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Asp.NetCore.EFCore.Models.Migrations.Models.SysUserInfoDetail", b =>
                {
                    b.HasOne("Asp.NetCore.EFCore.Models.Migrations.Models.SysUserInfo", null)
                        .WithOne("SysUserInfoDetail")
                        .HasForeignKey("Asp.NetCore.EFCore.Models.Migrations.Models.SysUserInfoDetail", "SysUserInfoDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Asp.NetCore.EFCore.Models.Migrations.Models.SysUserInfo", "SysUserInfo")
                        .WithMany()
                        .HasForeignKey("SysUserInfoId");
                });

            modelBuilder.Entity("Asp.NetCore.EFCore.Models.Migrations.Models.SysUserRoleMapping", b =>
                {
                    b.HasOne("Asp.NetCore.EFCore.Models.Migrations.Models.SysRole", "SysRole")
                        .WithMany("SysUserRoleMapping")
                        .HasForeignKey("SysRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Asp.NetCore.EFCore.Models.Migrations.Models.SysUserInfo", "SysUserInfo")
                        .WithMany("SysUserRoleMapping")
                        .HasForeignKey("SysUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
